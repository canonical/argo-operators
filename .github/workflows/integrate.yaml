# reusable workflow triggered by other actions
name: CI

on:
  workflow_call:
    secrets:
      CHARMCRAFT_CREDENTIALS:
        required: true

jobs:
  lib-check:
    name: Check libraries
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/_quality-checks.yaml@orfeas-k-update-linting
    secrets: inherit
    with:
      charm-path: ./charms/argo-controller

  lint:
    name: Lint Code
    runs-on: ubuntu-20.04
    steps:
    - name: Check out repo
      uses: actions/checkout@v3
    - run: |
        sudo apt update
        sudo apt install tox
    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
    - run: tox -vve argo-controller-lint

  terraform-fmt:
    name: Format Terraform
    uses: canonical/sdcore-github-workflows/.github/workflows/terraform.yaml@v1.0.0
    with:
      working-directory: charms/argo-controller/terraform

  terraform-deploy:
    name: Deploy Terraform
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/deploy-terraform.yaml@orfeas-k-add-terraform-reusable-workflow
    with:
      working-directory: charms/argo-controller/terraform

  unit:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
    - name: Check out repo
      uses: actions/checkout@v3
    - run: |
        sudo apt update
        sudo apt install tox
    - run: tox -vve argo-controller-unit

  integration:
    name: Integration Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        charm: [argo-controller]
    steps:
    - uses: actions/checkout@v3
    - name: Setup operator environment
      uses: charmed-kubernetes/actions-operator@main
      with:
        provider: microk8s
        channel: 1.29-strict/stable
        microk8s-addons: "dns storage rbac metallb:10.64.140.43-10.64.140.49"
        juju-channel: 3.4/stable
        charmcraft-channel: latest/candidate

    - name: Build and test
      working-directory: ./charms/${{ matrix.charm }}
      run: |
        sg snap_microk8s -c "tox -vve integration -- --model testing"

      # On failure, capture debugging resources
    - name: Get all
      run: kubectl get all -A
      if: failure()

    - name: Describe deployments
      run: kubectl describe deployments -A
      if: failure()

    - name: Describe replicasets
      run: kubectl describe replicasets -A
      if: failure()

    - name: Get juju status
      run: juju status
      if: failure()

    - name: Get application logs
      run: kubectl logs -n testing --tail 1000 -ljuju-app=${{ matrix.charm }}
      if: failure()

    - name: Get argo-controller operator logs
      run: kubectl logs -n testing --tail 1000 -ljuju-operator=${{ matrix.charm }}
      if: failure()
